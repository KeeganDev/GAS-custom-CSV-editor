
//comment out download cvs and put link to drive to access file(give hyperlink to drive) 
//




function onOpen() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var csvMenuEntries = [{name: "Download CSV", functionName: "saveAsCSV"}];
  ss.addMenu("Custom CSV", csvMenuEntries);
};

function saveAsCSV() {
  var ss = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  
  
  // The code below will set the value of name to the name input by the user, or 'cancel'
  var delimiter = Browser.inputBox('Enter delimiter for CSV', Browser.Buttons.OK_CANCEL);
  
  // create a folder from the name of the spreadsheet
  var folder = DriveApp.createFolder(ss.getName().toLowerCase().replace(/ /g,'_') + '_csv_' + new Date().getTime());
  // append ".csv" extension to the sheet name
  fileName = ss.getName() + ".csv";
  // convert all available sheet data to csv format
  var csvFile = convertRangeToCsvFile_(delimiter, fileName, ss);
  // create a file in the Docs List with the given name and the csv data
  var file = folder.createFile(fileName, csvFile);
  //File downlaod
  var downloadURL = file.getDownloadUrl().slice(0, -8);
  showurl(downloadURL);
  
}

function showurl(downloadURL) {
  var app = UiApp.createApplication().setHeight('60').setWidth('150');
  //Change what the popup says here
  app.setTitle("Your custom CSV export is ready!");
  var panel = app.createPopupPanel()
  //Change what the download button says here
  var link = app.createAnchor('Click here to download', downloadURL);
  panel.add(link);
  app.add(panel);
  var doc = SpreadsheetApp.getActive();
  doc.show(app);
}

function convertRangeToCsvFile_(delimiter, csvFileName, ss) {
  // get available data range in the spreadsheet
  var activeRange = ss.getDataRange();
  try {
    var data = activeRange.getValues();
    var csvFile = undefined;
    
    // loop through the data in the range and build a string with the csv data
    if (data.length > 1) {
      var csv = "";
      for (var row = 0; row < data.length; row++) {
        for (var col = 0; col < data[row].length; col++) {
          if (data[row][col].toString().indexOf(delimiter) != -1) {
            data[row][col] = "\"" + data[row][col] + "\"";
          }
        }
        
        // join each row's columns
        // add a carriage return to end of each row, except for the last one
        if (row < data.length-1) {
          csv += data[row].join(delimiter) + "\r\n";
        }
        else {
          //Logger.log(data[row])
          //Logger.log(data[row].join(delimiter));
          csv += data[row].join(delimiter);
        }
      }
      csvFile = csv;
    }
    return csvFile;
  }
  catch(err) {
    Logger.log(err);
    Browser.msgBox(err);
  }
}
